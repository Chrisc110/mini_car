ARM GAS  /tmp/ccH6VPiy.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB133:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
ARM GAS  /tmp/ccH6VPiy.s 			page 2


  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** UART_HandleTypeDef huart2;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****   * @brief  The application entry point.
  64:Core/Src/main.c ****   * @retval int
  65:Core/Src/main.c ****   */
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Core/Src/main.c ****   HAL_Init();
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Configure the system clock */
  82:Core/Src/main.c ****   SystemClock_Config();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Initialize all configured peripherals */
  89:Core/Src/main.c ****   MX_GPIO_Init();
ARM GAS  /tmp/ccH6VPiy.s 			page 3


  90:Core/Src/main.c ****   MX_USART2_UART_Init();
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END 2 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Infinite loop */
  96:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  97:Core/Src/main.c ****   while (1)
  98:Core/Src/main.c ****   {
  99:Core/Src/main.c ****     /* USER CODE END WHILE */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 102:Core/Src/main.c ****   }
 103:Core/Src/main.c ****   /* USER CODE END 3 */
 104:Core/Src/main.c **** }
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** /**
 107:Core/Src/main.c ****   * @brief System Clock Configuration
 108:Core/Src/main.c ****   * @retval None
 109:Core/Src/main.c ****   */
 110:Core/Src/main.c **** void SystemClock_Config(void)
 111:Core/Src/main.c **** {
 112:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 113:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 116:Core/Src/main.c ****   */
 117:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 118:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 119:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 120:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 121:Core/Src/main.c ****   */
 122:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 131:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 132:Core/Src/main.c ****   {
 133:Core/Src/main.c ****     Error_Handler();
 134:Core/Src/main.c ****   }
 135:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 136:Core/Src/main.c ****   */
 137:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 138:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 139:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 140:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 145:Core/Src/main.c ****   {
 146:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccH6VPiy.s 			page 4


 147:Core/Src/main.c ****   }
 148:Core/Src/main.c **** }
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** /**
 151:Core/Src/main.c ****   * @brief USART2 Initialization Function
 152:Core/Src/main.c ****   * @param None
 153:Core/Src/main.c ****   * @retval None
 154:Core/Src/main.c ****   */
 155:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 156:Core/Src/main.c **** {
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 165:Core/Src/main.c ****   huart2.Instance = USART2;
 166:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 167:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 168:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 169:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 170:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 171:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 172:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 173:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 174:Core/Src/main.c ****   {
 175:Core/Src/main.c ****     Error_Handler();
 176:Core/Src/main.c ****   }
 177:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** }
 182:Core/Src/main.c **** 
 183:Core/Src/main.c **** /**
 184:Core/Src/main.c ****   * @brief GPIO Initialization Function
 185:Core/Src/main.c ****   * @param None
 186:Core/Src/main.c ****   * @retval None
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c **** static void MX_GPIO_Init(void)
 189:Core/Src/main.c **** {
  27              		.loc 1 189 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 12
  34              		.cfi_offset 4, -12
  35              		.cfi_offset 5, -8
  36              		.cfi_offset 14, -4
  37 0002 8BB0     		sub	sp, sp, #44
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 56
 190:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
ARM GAS  /tmp/ccH6VPiy.s 			page 5


  40              		.loc 1 190 0
  41 0004 0024     		movs	r4, #0
  42 0006 0594     		str	r4, [sp, #20]
  43 0008 0694     		str	r4, [sp, #24]
  44 000a 0794     		str	r4, [sp, #28]
  45 000c 0894     		str	r4, [sp, #32]
  46 000e 0994     		str	r4, [sp, #36]
  47              	.LBB4:
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 193:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  48              		.loc 1 193 0
  49 0010 0194     		str	r4, [sp, #4]
  50 0012 224B     		ldr	r3, .L3
  51 0014 1A6B     		ldr	r2, [r3, #48]
  52 0016 42F00402 		orr	r2, r2, #4
  53 001a 1A63     		str	r2, [r3, #48]
  54 001c 1A6B     		ldr	r2, [r3, #48]
  55 001e 02F00402 		and	r2, r2, #4
  56 0022 0192     		str	r2, [sp, #4]
  57 0024 019A     		ldr	r2, [sp, #4]
  58              	.LBE4:
  59              	.LBB5:
 194:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  60              		.loc 1 194 0
  61 0026 0294     		str	r4, [sp, #8]
  62 0028 1A6B     		ldr	r2, [r3, #48]
  63 002a 42F08002 		orr	r2, r2, #128
  64 002e 1A63     		str	r2, [r3, #48]
  65 0030 1A6B     		ldr	r2, [r3, #48]
  66 0032 02F08002 		and	r2, r2, #128
  67 0036 0292     		str	r2, [sp, #8]
  68 0038 029A     		ldr	r2, [sp, #8]
  69              	.LBE5:
  70              	.LBB6:
 195:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  71              		.loc 1 195 0
  72 003a 0394     		str	r4, [sp, #12]
  73 003c 1A6B     		ldr	r2, [r3, #48]
  74 003e 42F00102 		orr	r2, r2, #1
  75 0042 1A63     		str	r2, [r3, #48]
  76 0044 1A6B     		ldr	r2, [r3, #48]
  77 0046 02F00102 		and	r2, r2, #1
  78 004a 0392     		str	r2, [sp, #12]
  79 004c 039A     		ldr	r2, [sp, #12]
  80              	.LBE6:
  81              	.LBB7:
 196:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  82              		.loc 1 196 0
  83 004e 0494     		str	r4, [sp, #16]
  84 0050 1A6B     		ldr	r2, [r3, #48]
  85 0052 42F00202 		orr	r2, r2, #2
  86 0056 1A63     		str	r2, [r3, #48]
  87 0058 1B6B     		ldr	r3, [r3, #48]
  88 005a 03F00203 		and	r3, r3, #2
  89 005e 0493     		str	r3, [sp, #16]
  90 0060 049B     		ldr	r3, [sp, #16]
ARM GAS  /tmp/ccH6VPiy.s 			page 6


  91              	.LBE7:
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 199:Core/Src/main.c ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
  92              		.loc 1 199 0
  93 0062 0F4D     		ldr	r5, .L3+4
  94 0064 2246     		mov	r2, r4
  95 0066 2021     		movs	r1, #32
  96 0068 2846     		mov	r0, r5
  97 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
  98              	.LVL0:
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 202:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
  99              		.loc 1 202 0
 100 006e 4FF40053 		mov	r3, #8192
 101 0072 0593     		str	r3, [sp, #20]
 203:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 102              		.loc 1 203 0
 103 0074 0B4B     		ldr	r3, .L3+8
 104 0076 0693     		str	r3, [sp, #24]
 204:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 105              		.loc 1 204 0
 106 0078 0794     		str	r4, [sp, #28]
 205:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 107              		.loc 1 205 0
 108 007a 05A9     		add	r1, sp, #20
 109 007c 0A48     		ldr	r0, .L3+12
 110 007e FFF7FEFF 		bl	HAL_GPIO_Init
 111              	.LVL1:
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /*Configure GPIO pin : LD2_Pin */
 208:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD2_Pin;
 112              		.loc 1 208 0
 113 0082 2023     		movs	r3, #32
 114 0084 0593     		str	r3, [sp, #20]
 209:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 115              		.loc 1 209 0
 116 0086 0123     		movs	r3, #1
 117 0088 0693     		str	r3, [sp, #24]
 210:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 118              		.loc 1 210 0
 119 008a 0794     		str	r4, [sp, #28]
 211:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 120              		.loc 1 211 0
 121 008c 0894     		str	r4, [sp, #32]
 212:Core/Src/main.c ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 122              		.loc 1 212 0
 123 008e 05A9     		add	r1, sp, #20
 124 0090 2846     		mov	r0, r5
 125 0092 FFF7FEFF 		bl	HAL_GPIO_Init
 126              	.LVL2:
 213:Core/Src/main.c **** 
 214:Core/Src/main.c **** }
 127              		.loc 1 214 0
 128 0096 0BB0     		add	sp, sp, #44
 129              	.LCFI2:
ARM GAS  /tmp/ccH6VPiy.s 			page 7


 130              		.cfi_def_cfa_offset 12
 131              		@ sp needed
 132 0098 30BD     		pop	{r4, r5, pc}
 133              	.L4:
 134 009a 00BF     		.align	2
 135              	.L3:
 136 009c 00380240 		.word	1073887232
 137 00a0 00000240 		.word	1073872896
 138 00a4 00002110 		.word	270598144
 139 00a8 00080240 		.word	1073874944
 140              		.cfi_endproc
 141              	.LFE133:
 143              		.section	.text.Error_Handler,"ax",%progbits
 144              		.align	1
 145              		.global	Error_Handler
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu fpv4-sp-d16
 151              	Error_Handler:
 152              	.LFB134:
 215:Core/Src/main.c **** 
 216:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 217:Core/Src/main.c **** 
 218:Core/Src/main.c **** /* USER CODE END 4 */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c **** /**
 221:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 222:Core/Src/main.c ****   * @retval None
 223:Core/Src/main.c ****   */
 224:Core/Src/main.c **** void Error_Handler(void)
 225:Core/Src/main.c **** {
 153              		.loc 1 225 0
 154              		.cfi_startproc
 155              		@ Volatile: function does not return.
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              	.LBB8:
 160              	.LBB9:
 161              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
ARM GAS  /tmp/ccH6VPiy.s 			page 8


  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/ccH6VPiy.s 			page 9


  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccH6VPiy.s 			page 10


 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 162              		.loc 2 142 0
 163              		.syntax unified
 164              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 165 0000 72B6     		cpsid i
 166              	@ 0 "" 2
 167              		.thumb
 168              		.syntax unified
 169              	.L6:
 170 0002 FEE7     		b	.L6
 171              	.LBE9:
 172              	.LBE8:
 173              		.cfi_endproc
 174              	.LFE134:
 176              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 177              		.align	1
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	MX_USART2_UART_Init:
 184              	.LFB132:
 156:Core/Src/main.c **** 
 185              		.loc 1 156 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189 0000 08B5     		push	{r3, lr}
 190              	.LCFI3:
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 3, -8
 193              		.cfi_offset 14, -4
 165:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 194              		.loc 1 165 0
 195 0002 0A48     		ldr	r0, .L11
 196 0004 0A4B     		ldr	r3, .L11+4
 197 0006 0360     		str	r3, [r0]
 166:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 198              		.loc 1 166 0
 199 0008 4FF4E133 		mov	r3, #115200
 200 000c 4360     		str	r3, [r0, #4]
 167:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 201              		.loc 1 167 0
 202 000e 0023     		movs	r3, #0
 203 0010 8360     		str	r3, [r0, #8]
 168:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
ARM GAS  /tmp/ccH6VPiy.s 			page 11


 204              		.loc 1 168 0
 205 0012 C360     		str	r3, [r0, #12]
 169:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 206              		.loc 1 169 0
 207 0014 0361     		str	r3, [r0, #16]
 170:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 208              		.loc 1 170 0
 209 0016 0C22     		movs	r2, #12
 210 0018 4261     		str	r2, [r0, #20]
 171:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 211              		.loc 1 171 0
 212 001a 8361     		str	r3, [r0, #24]
 172:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 213              		.loc 1 172 0
 214 001c C361     		str	r3, [r0, #28]
 173:Core/Src/main.c ****   {
 215              		.loc 1 173 0
 216 001e FFF7FEFF 		bl	HAL_UART_Init
 217              	.LVL3:
 218 0022 00B9     		cbnz	r0, .L10
 219 0024 08BD     		pop	{r3, pc}
 220              	.L10:
 175:Core/Src/main.c ****   }
 221              		.loc 1 175 0
 222 0026 FFF7FEFF 		bl	Error_Handler
 223              	.LVL4:
 224              	.L12:
 225 002a 00BF     		.align	2
 226              	.L11:
 227 002c 00000000 		.word	huart2
 228 0030 00440040 		.word	1073759232
 229              		.cfi_endproc
 230              	.LFE132:
 232              		.section	.text.SystemClock_Config,"ax",%progbits
 233              		.align	1
 234              		.global	SystemClock_Config
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 238              		.fpu fpv4-sp-d16
 240              	SystemClock_Config:
 241              	.LFB131:
 111:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 242              		.loc 1 111 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 80
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246 0000 00B5     		push	{lr}
 247              	.LCFI4:
 248              		.cfi_def_cfa_offset 4
 249              		.cfi_offset 14, -4
 250 0002 95B0     		sub	sp, sp, #84
 251              	.LCFI5:
 252              		.cfi_def_cfa_offset 88
 112:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 253              		.loc 1 112 0
 254 0004 3022     		movs	r2, #48
ARM GAS  /tmp/ccH6VPiy.s 			page 12


 255 0006 0021     		movs	r1, #0
 256 0008 08A8     		add	r0, sp, #32
 257 000a FFF7FEFF 		bl	memset
 258              	.LVL5:
 113:Core/Src/main.c **** 
 259              		.loc 1 113 0
 260 000e 0023     		movs	r3, #0
 261 0010 0393     		str	r3, [sp, #12]
 262 0012 0493     		str	r3, [sp, #16]
 263 0014 0593     		str	r3, [sp, #20]
 264 0016 0693     		str	r3, [sp, #24]
 265 0018 0793     		str	r3, [sp, #28]
 266              	.LBB10:
 117:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 267              		.loc 1 117 0
 268 001a 0193     		str	r3, [sp, #4]
 269 001c 1F4A     		ldr	r2, .L19
 270 001e 116C     		ldr	r1, [r2, #64]
 271 0020 41F08051 		orr	r1, r1, #268435456
 272 0024 1164     		str	r1, [r2, #64]
 273 0026 126C     		ldr	r2, [r2, #64]
 274 0028 02F08052 		and	r2, r2, #268435456
 275 002c 0192     		str	r2, [sp, #4]
 276 002e 019A     		ldr	r2, [sp, #4]
 277              	.LBE10:
 278              	.LBB11:
 118:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 279              		.loc 1 118 0
 280 0030 0293     		str	r3, [sp, #8]
 281 0032 1B49     		ldr	r1, .L19+4
 282 0034 0A68     		ldr	r2, [r1]
 283 0036 22F44042 		bic	r2, r2, #49152
 284 003a 42F40042 		orr	r2, r2, #32768
 285 003e 0A60     		str	r2, [r1]
 286 0040 0A68     		ldr	r2, [r1]
 287 0042 02F44042 		and	r2, r2, #49152
 288 0046 0292     		str	r2, [sp, #8]
 289 0048 029A     		ldr	r2, [sp, #8]
 290              	.LBE11:
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 291              		.loc 1 122 0
 292 004a 0221     		movs	r1, #2
 293 004c 0891     		str	r1, [sp, #32]
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 294              		.loc 1 123 0
 295 004e 0122     		movs	r2, #1
 296 0050 0B92     		str	r2, [sp, #44]
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 297              		.loc 1 124 0
 298 0052 1022     		movs	r2, #16
 299 0054 0C92     		str	r2, [sp, #48]
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 300              		.loc 1 125 0
 301 0056 0E91     		str	r1, [sp, #56]
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 302              		.loc 1 126 0
 303 0058 0F93     		str	r3, [sp, #60]
ARM GAS  /tmp/ccH6VPiy.s 			page 13


 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 304              		.loc 1 127 0
 305 005a 1092     		str	r2, [sp, #64]
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 306              		.loc 1 128 0
 307 005c 4FF4A873 		mov	r3, #336
 308 0060 1193     		str	r3, [sp, #68]
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 309              		.loc 1 129 0
 310 0062 0423     		movs	r3, #4
 311 0064 1293     		str	r3, [sp, #72]
 130:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 312              		.loc 1 130 0
 313 0066 0723     		movs	r3, #7
 314 0068 1393     		str	r3, [sp, #76]
 131:Core/Src/main.c ****   {
 315              		.loc 1 131 0
 316 006a 08A8     		add	r0, sp, #32
 317 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 318              	.LVL6:
 319 0070 80B9     		cbnz	r0, .L17
 137:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 320              		.loc 1 137 0
 321 0072 0F23     		movs	r3, #15
 322 0074 0393     		str	r3, [sp, #12]
 139:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 323              		.loc 1 139 0
 324 0076 0221     		movs	r1, #2
 325 0078 0491     		str	r1, [sp, #16]
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 326              		.loc 1 140 0
 327 007a 0023     		movs	r3, #0
 328 007c 0593     		str	r3, [sp, #20]
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 329              		.loc 1 141 0
 330 007e 4FF48052 		mov	r2, #4096
 331 0082 0692     		str	r2, [sp, #24]
 142:Core/Src/main.c **** 
 332              		.loc 1 142 0
 333 0084 0793     		str	r3, [sp, #28]
 144:Core/Src/main.c ****   {
 334              		.loc 1 144 0
 335 0086 03A8     		add	r0, sp, #12
 336 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 337              	.LVL7:
 338 008c 20B9     		cbnz	r0, .L18
 148:Core/Src/main.c **** 
 339              		.loc 1 148 0
 340 008e 15B0     		add	sp, sp, #84
 341              	.LCFI6:
 342              		.cfi_remember_state
 343              		.cfi_def_cfa_offset 4
 344              		@ sp needed
 345 0090 5DF804FB 		ldr	pc, [sp], #4
 346              	.L17:
 347              	.LCFI7:
 348              		.cfi_restore_state
ARM GAS  /tmp/ccH6VPiy.s 			page 14


 133:Core/Src/main.c ****   }
 349              		.loc 1 133 0
 350 0094 FFF7FEFF 		bl	Error_Handler
 351              	.LVL8:
 352              	.L18:
 146:Core/Src/main.c ****   }
 353              		.loc 1 146 0
 354 0098 FFF7FEFF 		bl	Error_Handler
 355              	.LVL9:
 356              	.L20:
 357              		.align	2
 358              	.L19:
 359 009c 00380240 		.word	1073887232
 360 00a0 00700040 		.word	1073770496
 361              		.cfi_endproc
 362              	.LFE131:
 364              		.section	.text.main,"ax",%progbits
 365              		.align	1
 366              		.global	main
 367              		.syntax unified
 368              		.thumb
 369              		.thumb_func
 370              		.fpu fpv4-sp-d16
 372              	main:
 373              	.LFB130:
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 374              		.loc 1 67 0
 375              		.cfi_startproc
 376              		@ Volatile: function does not return.
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379 0000 08B5     		push	{r3, lr}
 380              	.LCFI8:
 381              		.cfi_def_cfa_offset 8
 382              		.cfi_offset 3, -8
 383              		.cfi_offset 14, -4
  75:Core/Src/main.c **** 
 384              		.loc 1 75 0
 385 0002 FFF7FEFF 		bl	HAL_Init
 386              	.LVL10:
  82:Core/Src/main.c **** 
 387              		.loc 1 82 0
 388 0006 FFF7FEFF 		bl	SystemClock_Config
 389              	.LVL11:
  89:Core/Src/main.c ****   MX_USART2_UART_Init();
 390              		.loc 1 89 0
 391 000a FFF7FEFF 		bl	MX_GPIO_Init
 392              	.LVL12:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 393              		.loc 1 90 0
 394 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 395              	.LVL13:
 396              	.L22:
 397 0012 FEE7     		b	.L22
 398              		.cfi_endproc
 399              	.LFE130:
 401              		.comm	huart2,64,4
ARM GAS  /tmp/ccH6VPiy.s 			page 15


 402              		.text
 403              	.Letext0:
 404              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 405              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 406              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 407              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 408              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 409              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 410              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 411              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 412              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 413              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 414              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 415              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccH6VPiy.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccH6VPiy.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccH6VPiy.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccH6VPiy.s:136    .text.MX_GPIO_Init:000000000000009c $d
     /tmp/ccH6VPiy.s:144    .text.Error_Handler:0000000000000000 $t
     /tmp/ccH6VPiy.s:151    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccH6VPiy.s:177    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccH6VPiy.s:183    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccH6VPiy.s:227    .text.MX_USART2_UART_Init:000000000000002c $d
                            *COM*:0000000000000040 huart2
     /tmp/ccH6VPiy.s:233    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccH6VPiy.s:240    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccH6VPiy.s:359    .text.SystemClock_Config:000000000000009c $d
     /tmp/ccH6VPiy.s:365    .text.main:0000000000000000 $t
     /tmp/ccH6VPiy.s:372    .text.main:0000000000000000 main
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
